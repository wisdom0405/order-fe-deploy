{"ast":null,"code":"import { mapGetters } from 'vuex';\n// 서버와 실시간 알림 서비스를 위한 의존성 추가 필요\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nexport default {\n  data() {\n    return {\n      userRole: null,\n      isLogin: false\n    };\n  },\n  computed: {\n    ...mapGetters(['getTotalQuantity'])\n  },\n  created() {\n    // 현재 로그인한 사용자가 일반user인지 admin인지 확인하기 위해서 created될때 localStorage\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      this.isLogin = true;\n      this.userRole = localStorage.getItem(\"role\");\n    }\n    if (this.userRole === 'ADMIN') {\n      let sse = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      sse.addEventListener('connect', event => {\n        console.log(event);\n      });\n      sse.addEventListener('ordered', event => {\n        console.log(event);\n      });\n    }\n  },\n  methods: {\n    doLogout() {\n      localStorage.clear(); // localStorage에 저장된 토큰, user정보 삭제\n      window.location.reload(); // 재시작\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","EventSourcePolyfill","data","userRole","isLogin","computed","created","token","localStorage","getItem","sse","process","env","VUE_APP_API_BASE_URL","headers","Authorization","addEventListener","event","console","log","methods","doLogout","clear","window","location","reload"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/HeaderComponent.vue"],"sourcesContent":["<template>\n    <v-app-bar app dark>\n        <v-container>\n            <v-row align=\"center\">\n                <v-col class=\"d-flex justify-start\">\n                    <div v-if=\"userRole === 'ADMIN'\">\n                    <!-- 왼쪽 정렬 -->\n                    <v-btn :to=\"{path:'/member/list'}\">회원관리</v-btn>\n                    <v-btn :to=\"{path:'/product/manage'}\">상품관리</v-btn>\n                    <v-btn :to=\"{path:'/order/list'}\">실시간주문</v-btn>\n                    </div>\n                </v-col>\n                <v-col class=\"text-center\">\n                    <!-- 가운데 정렬 -->\n                    <v-btn :to=\"{path:'/'}\">java shop</v-btn>\n                </v-col>\n                <v-col class=\"d-flex justify-end\">\n                    <!-- 오른쪽 정렬 -->\n                    <v-btn v-if=\"isLogin\" :to=\"{path:'/order/cart'}\">장바구니({{ getTotalQuantity }})</v-btn>\n                    <v-btn :to=\"{path:'/product/list'}\">상품목록</v-btn>\n                    <v-btn v-if=\"isLogin\" :to=\"{path:'/mypage'}\">마이페이지</v-btn>\n                    <v-btn v-if=\"!isLogin\" :to=\"{path:'/member/create'}\">회원가입</v-btn>\n                    <v-btn v-if=\"!isLogin\" :to=\"{path:'/login'}\">로그인</v-btn>\n                    <v-btn v-if=\"isLogin\" @click=\"doLogout\">로그아웃</v-btn>\n                </v-col>\n            </v-row>\n        </v-container>\n    </v-app-bar>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n// 서버와 실시간 알림 서비스를 위한 의존성 추가 필요\nimport {EventSourcePolyfill} from 'event-source-polyfill';\nexport default { \n    data(){\n        return{\n            userRole: null,\n            isLogin: false\n        }\n    },\n    computed:{\n        ...mapGetters(['getTotalQuantity'])\n    },\n    created(){\n        // 현재 로그인한 사용자가 일반user인지 admin인지 확인하기 위해서 created될때 localStorage\n        const token = localStorage.getItem(\"token\");\n        if(token){\n            this.isLogin = true;\n            this.userRole = localStorage.getItem(\"role\");\n        }\n        if(this.userRole === 'ADMIN'){\n            let sse = new EventSourcePolyfill(`${process.env.VUE_APP_API_BASE_URL}/subscribe`, {headers: {Authorization: `Bearer ${token}`}});\n            sse.addEventListener('connect', (event)=> {\n                console.log(event)\n            })\n            sse.addEventListener('ordered', (event)=> {\n                console.log(event)\n            })\n        }\n    },\n    methods:{\n        doLogout(){\n            localStorage.clear(); // localStorage에 저장된 토큰, user정보 삭제\n            window.location.reload(); // 재시작\n        }\n    }\n};\n</script>\n"],"mappings":"AA+BA,SAASA,UAAS,QAAS,MAAM;AACjC;AACA,SAAQC,mBAAmB,QAAO,uBAAuB;AACzD,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,QAAQ,EAAC;IACL,GAAGL,UAAU,CAAC,CAAC,kBAAkB,CAAC;EACtC,CAAC;EACDM,OAAOA,CAAA,EAAE;IACL;IACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAGF,KAAK,EAAC;MACL,IAAI,CAACH,OAAM,GAAI,IAAI;MACnB,IAAI,CAACD,QAAO,GAAIK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAChD;IACA,IAAG,IAAI,CAACN,QAAO,KAAM,OAAO,EAAC;MACzB,IAAIO,GAAE,GAAI,IAAIT,mBAAmB,CAAC,GAAGU,OAAO,CAACC,GAAG,CAACC,oBAAoB,YAAY,EAAE;QAACC,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUR,KAAK;QAAE;MAAC,CAAC,CAAC;MACjIG,GAAG,CAACM,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAI;QACtCC,OAAO,CAACC,GAAG,CAACF,KAAK;MACrB,CAAC;MACDP,GAAG,CAACM,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAI;QACtCC,OAAO,CAACC,GAAG,CAACF,KAAK;MACrB,CAAC;IACL;EACJ,CAAC;EACDG,OAAO,EAAC;IACJC,QAAQA,CAAA,EAAE;MACNb,YAAY,CAACc,KAAK,CAAC,CAAC,EAAE;MACtBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;IAC9B;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}