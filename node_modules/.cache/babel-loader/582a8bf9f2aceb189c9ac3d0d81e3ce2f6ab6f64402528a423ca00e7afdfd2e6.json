{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"StoreTestComponent2\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"p\", null, \"count : \" + _toDisplayString(_ctx.getCount), 1 /* TEXT */), _createVNode(_component_v_btn, {\n    onClick: $options.incrementCount,\n    color: \"success\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"incrementCount\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createVNode(_component_v_btn, {\n    color: \"success\",\n    onClick: $options.updateMessage\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"update message\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_toDisplayString","_ctx","getCount","_createVNode","_component_v_btn","onClick","$options","incrementCount","color","default","_withCtx","_createTextVNode","_","type","_cache","$event","$data","message","updateMessage"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/StoreTestComponent2.vue"],"sourcesContent":["<template>\n    <div>StoreTestComponent2</div>\n    <p>count : {{getCount}}</p>\n\n    <v-btn @click=\"incrementCount\" color=\"success\">incrementCount</v-btn>\n    <input type=\"text\" v-model=\"message\">\n    <v-btn color=\"success\" @click=\"updateMessage\">update message</v-btn>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n    export default{\n        data(){\n            return{\n                count:0,\n                message:\"\"\n            }\n        },\n        created(){\n\n        },\n        watch:{\n\n        },\n        updated() {\n\n        },\n        computed: {\n            ...mapGetters(['getCount']),\n            // ...mapGetters(['getMessage']),\n        },\n        methods:{\n            incrementCount(){\n                // this.count++;\n                this.$store.dispatch('incrementCount')\n            },\n            updateMessage(){\n                this.$store.dispatch('updateMessage',this.message)\n            }\n        }\n    }\n</script>"],"mappings":";gCACIA,mBAAA,CAA8B,aAAzB,qBAAmB;;;uBAD5BC,mBAAA,CAAAC,SAAA,SACIC,UAA8B,EAC9BH,mBAAA,CAA2B,WAAxB,UAAQ,GAAAI,gBAAA,CAAEC,IAAA,CAAAC,QAAQ,kBAErBC,YAAA,CAAqEC,gBAAA;IAA7DC,OAAK,EAAEC,QAAA,CAAAC,cAAc;IAAEC,KAAK,EAAC;;IAJzCC,OAAA,EAAAC,QAAA,CAImD,MAAc,CAJjEC,gBAAA,CAImD,gBAAc,E;IAJjEC,CAAA;kDAKIhB,mBAAA,CAAqC;IAA9BiB,IAAI,EAAC,MAAM;IALtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKgCC,KAAA,CAAAC,OAAO,GAAAF,MAAA;iDAAPC,KAAA,CAAAC,OAAO,E,GACnCd,YAAA,CAAoEC,gBAAA;IAA7DI,KAAK,EAAC,SAAS;IAAEH,OAAK,EAAEC,QAAA,CAAAY;;IANnCT,OAAA,EAAAC,QAAA,CAMkD,MAAc,CANhEC,gBAAA,CAMkD,gBAAc,E;IANhEC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}