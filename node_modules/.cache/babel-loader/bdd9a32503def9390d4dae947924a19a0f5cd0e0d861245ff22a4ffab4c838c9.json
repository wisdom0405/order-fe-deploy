{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, {\n            class: \"text-center text-h5\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" 회원목록 \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_data_table, {\n              headers: _ctx.tableHeaders,\n              items: _ctx.memberList\n            }, null, 8 /* PROPS */, [\"headers\", \"items\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_row","_component_v_col","_component_v_card","_component_v_card_title","class","_createTextVNode","_","_component_v_card_text","_component_v_data_table","headers","_ctx","tableHeaders","items","memberList"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/views/MemberList.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row>\n            <v-col>\n                <v-card>\n                    <v-card-title class=\"text-center text-h5\">\n                        회원목록\n                    </v-card-title>\n                    <v-card-text>\n                        <v-data-table\n                        :headers=\"tableHeaders\"\n                        :items=\"memberList\"\n                        >\n\n                        </v-data-table>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport axios from 'axios';\nexport default{\n    data(){\n        return{\n            // key-value 형식 (title : key, key: value(DB로 들어오는 값 그대로))\n            tableHeaders: [{title: 'ID', key : 'id', align: 'start'}, \n                            {title:'이름', key:'name', align:'start'}, \n                            {title:'EMAIL', key:'email', align:'start'}],\n            memberList: []\n        }\n    },\n    async created(){\n        // const token = localStorage.getItem('token');\n        // const headers = {Authorization : `Bearer ${token}`}\n        // 이런형식의 토큰이 들어간다\n        // \"headers\" : {Authorization: 'Bearer 토큰값'}, key와 value 값이 똑같을 때 {\"headers\": headers}랑 {headers}랑 같음\n        try{\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/member/list`); // {headers: headers}가 들어간 것과 같음 -> {headers}빼줬음\n        }\n        \n        this.memberList = response.data.result.content;\n    }\n}\n</script>\n"],"mappings":";;;;;;;;;uBACIA,YAAA,CAkBcC,sBAAA;IAnBlBC,OAAA,EAAAC,QAAA,CAEQ,MAgBQ,CAhBRC,YAAA,CAgBQC,gBAAA;MAlBhBH,OAAA,EAAAC,QAAA,CAGY,MAcQ,CAdRC,YAAA,CAcQE,gBAAA;QAjBpBJ,OAAA,EAAAC,QAAA,CAIgB,MAYS,CAZTC,YAAA,CAYSG,iBAAA;UAhBzBL,OAAA,EAAAC,QAAA,CAKoB,MAEe,CAFfC,YAAA,CAEeI,uBAAA;YAFDC,KAAK,EAAC;UAAqB;YAL7DP,OAAA,EAAAC,QAAA,CAK8D,MAE1C,CAPpBO,gBAAA,CAK8D,QAE1C,E;YAPpBC,CAAA;cAQoBP,YAAA,CAOcQ,sBAAA;YAflCV,OAAA,EAAAC,QAAA,CASwB,MAKe,CALfC,YAAA,CAKeS,uBAAA;cAJdC,OAAO,EAAEC,IAAA,CAAAC,YAAY;cACrBC,KAAK,EAAEF,IAAA,CAAAG;;YAXhCP,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}