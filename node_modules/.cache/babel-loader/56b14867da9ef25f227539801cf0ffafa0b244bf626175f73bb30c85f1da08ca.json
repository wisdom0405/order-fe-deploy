{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" HTML 요소의 동적 값 표시 \"), _createCommentVNode(\" html요소 안에 중괄호 2번을 사용함으로서 script에 정의된 변수값을 화면에 표시 \"), _createElementVNode(\"h1\", null, \"hello world \" + _toDisplayString($data.language), 1 /* TEXT */), _createCommentVNode(\" :value문법을 사용하면 단방향 데이터 바인딩 \"), _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $data.value1\n  }, null, 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" v-model문법을 사용하면 양방향 데이터 바인딩 \"), _createCommentVNode(\" 양방향 데이터 바인딩은 여기서 자바스크립트 변수값도 바꿔줄 수 있다. \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.value2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.value2]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.showValue && $options.showValue(...args))\n  }, \"변수 변경사항 확인\"), _hoisted_2, _createElementVNode(\"h1\", null, _toDisplayString($data.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.increment && $options.increment(...args))\n  }, \"increment\"), _hoisted_3, _createElementVNode(\"h1\", null, _toDisplayString($options.doubleCount), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.count2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.count2]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.increment2 && $options.increment2(...args))\n  }, \"increment2\"), _hoisted_4], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_createCommentVNode","_toDisplayString","$data","language","type","value","value1","_hoisted_1","_cache","$event","value2","onClick","args","$options","showValue","_hoisted_2","count","increment","_hoisted_3","doubleCount","count2","increment2","_hoisted_4"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/ModelingComponent.vue"],"sourcesContent":["<template>\n    <!-- HTML 요소의 동적 값 표시 -->\n     <!-- html요소 안에 중괄호 2번을 사용함으로서 script에 정의된 변수값을 화면에 표시 -->\n      <h1>hello world {{language}}</h1>\n\n        <!-- :value문법을 사용하면 단방향 데이터 바인딩 -->\n        <input type=\"text\" :value=\"value1\">\n        <!-- v-model문법을 사용하면 양방향 데이터 바인딩 -->\n         <!-- 양방향 데이터 바인딩은 여기서 자바스크립트 변수값도 바꿔줄 수 있다. -->\n        <input type=\"text\" v-model=\"value2\"> \n        <button @click=\"showValue\">변수 변경사항 확인</button><br>\n\n        <h1>{{count}}</h1>\n        <button @click=\"increment\">increment</button><br>\n\n        <h1>{{doubleCount}}</h1>\n\n        <input type=\"number\" v-model=\"count2\"> \n        <button @click=\"increment2\">increment2</button><br>\n\n</template>\n\n<script>\nexport default{\n    data() {\n        return{\n            language:\"python\",\n            value1:\" python\",\n            value2:\" java\",\n            count: 0,\n            count2: 0\n        }\n    },\n    // computed는 종속된 반응형 데이터가 변경될 때에 다시 실행하여 값을 계산하는 함수\n    computed:{\n        doubleCount\n    },\n    methods:{\n        showValue(){\n            alert(this.value2); \n        },\n        increment(){\n            this.count += 1;\n        },\n        increment2(){\n            this.count2 += 1;\n        }\n    }\n}\n</script>\n"],"mappings":";mBAAA;gCAUsDA,mBAAA,CAAI;gCAGLA,mBAAA,CAAI;gCAKFA,mBAAA,CAAI;;uBAlB3DC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,sBAAyB,EACxBA,mBAAA,sDAAyD,EACxDH,mBAAA,CAAiC,YAA7B,cAAY,GAAAI,gBAAA,CAAEC,KAAA,CAAAC,QAAQ,kBAExBH,mBAAA,gCAAmC,EACnCH,mBAAA,CAAmC;IAA5BO,IAAI,EAAC,MAAM;IAAEC,KAAK,EAAEH,KAAA,CAAAI;0BANnCC,UAAA,GAOQP,mBAAA,iCAAoC,EACnCA,mBAAA,4CAA+C,E,gBAChDH,mBAAA,CAAoC;IAA7BO,IAAI,EAAC,MAAM;IAT1B,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASoCP,KAAA,CAAAQ,MAAM,GAAAD,MAAA;iDAANP,KAAA,CAAAQ,MAAM,E,GAClCb,mBAAA,CAA8C;IAArCc,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,GAASG,UAAI,EAElDlB,mBAAA,CAAkB,YAAAI,gBAAA,CAAZC,KAAA,CAAAc,KAAK,kBACXnB,mBAAA,CAA6C;IAApCc,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAI,SAAA,IAAAJ,QAAA,CAAAI,SAAA,IAAAL,IAAA,CAAS;KAAE,WAAS,GAASM,UAAI,EAEjDrB,mBAAA,CAAwB,YAAAI,gBAAA,CAAlBY,QAAA,CAAAM,WAAW,kB,gBAEjBtB,mBAAA,CAAsC;IAA/BO,IAAI,EAAC,QAAQ;IAjB5B,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBsCP,KAAA,CAAAkB,MAAM,GAAAX,MAAA;iDAANP,KAAA,CAAAkB,MAAM,E,GACpCvB,mBAAA,CAA+C;IAAtCc,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAQ,UAAA,IAAAR,QAAA,CAAAQ,UAAA,IAAAT,IAAA,CAAU;KAAE,YAAU,GAASU,UAAI,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}