{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return null;\n}","map":{"version":3,"names":[],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/WatchUpdateComponent.vue"],"sourcesContent":["<template>\n    \n</template>\n<script>\nexport default{\n    data(){\n        return{\n           \n        }\n    },\n    // 화면이 열리기 전(vue인스턴스가 생성되기 이전)에 실행되는 함수\n    // 화면이 그려지기 전\n    created(){\n        this.data2 = \"변경된 데이터2\";\n    },\n    beforeMount(){\n        window.addEventListener('resize', this.resize);\n    },\n    // vue의 컴포넌트들이 DOM에 마운트된 이후(화면이 모두 그려진 이후)에 실행되는 함수\n    // html요소들이 그려진 이후 실행\n    mounted(){\n        console.log(\"화면이 그려진 이후에 출력\");\n        this.data3 = \"변경된 데이터3\";\n    },\n    // 컴포넌트가 화면에서 제거될 때 아래 함수 실행. beforeDestroy로 사용하기도 함.\n    // 알림(sse)연결, 웹소켓 등 서버와의 연결을 끊어주고 나가야 하는 상황 \n    beforeUnmount(){\n        window.removeEventListener('resize', this.resize);\n    },\n    methods:{\n        resize(){\n            alert(\"화면의 배율이 변경되고 있습니다.\");\n        }\n    }\n}\n</script>"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}