{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['isAdmin', 'pageTitle'],\n  data() {\n    return {\n      searchType: 'optional',\n      searchOptions: [{\n        text: \"선택\",\n        value: 'optional'\n      }, {\n        text: \"상품명\",\n        value: \"name\"\n      }, {\n        text: \"카테고리\",\n        value: \"category\"\n      }],\n      searchValue: \"\",\n      productList: [],\n      pageSize: 5,\n      currentPage: 0\n    };\n  },\n  created() {\n    this.loadProduct();\n    window.addEventListener('scroll', this.scrollPagination); // 화면상에서 스크롤이 감지될 때 scrollPagination 호출\n  },\n  methods: {\n    searchProducts() {},\n    deleteProduct(productId) {\n      console.log(productId);\n    },\n    async loadProduct() {\n      try {\n        // Pageable 객체에 맞게 파라미터 형식으로 데이터를 전송해줘야 함\n        // url에 product/list?size=3&page=0 이런식으로 요청\n        // 방법1. 파라미터 방식 : {params:{page:10, size:2}} 와 같은 형식으로 전송 시 parameter 형식으로 변환되어 서버로 전송\n        // 방법2. body로 formData 객체 생성하여 서버로 데이터 전송 \n        const params = {\n          size: this.pageSize,\n          page: this.currentPage\n        };\n        const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/product/list`, {\n          params\n        });\n        this.productList = response.data.result.content;\n        console.log(response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    scrollPagination() {\n      // 화면상에서 스크롤이 동작할때 실행되도록 하는 함수\n      // \"현재화면 + 스크롤로 이동한 화면 >  전체화면 - n\" 의 조건이 성립되면 추가 데이터 로드 \n      const isBottom = window.innerHeight + wisdo;\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","searchType","searchOptions","text","value","searchValue","productList","pageSize","currentPage","created","loadProduct","window","addEventListener","scrollPagination","methods","searchProducts","deleteProduct","productId","console","log","params","size","page","response","get","process","env","VUE_APP_API_BASE_URL","result","content","e","isBottom","innerHeight","wisdo"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/ProductListComponent.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row class=\"d-flex justify-content-between mt-5\">\n            <v-col>\n                <v-form @submit.prevent=\"searchProducts\">\n                    <v-row>\n                        <v-col cols=\"auto\">\n                            <v-select\n                             v-model=\"searchType\"\n                             :items=\"searchOptions\"\n                             item-title=\"text\"\n                             item-value=\"value\"\n                            >\n\n                            </v-select>\n                        </v-col>\n\n                        <v-col>\n                            <v-text-field\n                            v-model=\"searchValue\" label=\"Search\"\n                            >\n                                \n                            </v-text-field>\n                        </v-col>\n\n                        <v-col cols=\"auto\">\n                            <v-btn type=\"submit\">검색</v-btn>    \n                        </v-col>\n\n                    </v-row>\n                </v-form>\n            </v-col>\n\n            <v-col cols=\"auto\" v-if=\"!isAdmin\">\n                <v-btn color=\"secondary\" class=\"mr-2\">장바구니</v-btn>\n                <v-btn color=\"success\">주문하기</v-btn>\n            </v-col>\n\n            <v-col cols=\"auto\" v-if=\"isAdmin\">\n                <v-btn href=\"/product/create\" color=\"success\">상품등록</v-btn>\n            </v-col>\n        </v-row>\n        <v-row>\n            <v-col>\n                <v-card>\n                    <v-card-title class=\"text-h6 text-center\">{{pageTitle}}</v-card-title>\n                    <v-card-text>\n                        <v-table>\n                            <thead>\n                                <tr>\n                                    <th>제품사진</th>\n                                    <th>제품명</th>\n                                    <th>가격</th>\n                                    <th>재고수량</th>\n                                    <th v-if=\"!isAdmin\">주문수량</th>\n                                    <th v-if=\"!isAdmin\">주문선택</th>\n                                    <th v-if=\"isAdmin\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"p in productList\" :key=\"p.id\">\n                                    <td>\n                                        <v-img :src=\"p.imagePath\" style=\"height:100px; width:auto;\"></v-img>\n                                    </td>\n                                    <td>{{p.name}}</td>\n                                    <td>{{p.price}}</td>\n                                    <td>{{p.stockQuantity}}</td>\n                                    <td></td>\n                                    <td></td>\n                                    <td v-if=\"isAdmin\">\n                                        <v-btn color=\"secondary\" @click=\"deleteProduct(p.id)\">삭제</v-btn>    \n                                    </td>\n                                </tr>\n                               \n                            </tbody>\n\n                        </v-table>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default{\n    props: ['isAdmin', 'pageTitle'],\n    data(){\n        return{\n            searchType: 'optional',\n            searchOptions: [\n                {text:\"선택\", value:'optional'},\n                {text:\"상품명\", value: \"name\"},\n                {text:\"카테고리\", value: \"category\"}\n            ],\n            searchValue: \"\",\n            productList:[],\n            pageSize:5,\n            currentPage:0,\n        }\n    },\n    created(){\n        this.loadProduct();\n        window.addEventListener('scroll', this.scrollPagination); // 화면상에서 스크롤이 감지될 때 scrollPagination 호출\n\n    },\n    methods:{\n        searchProducts(){\n\n        },\n        deleteProduct(productId){\n            console.log(productId);\n        },\n        async loadProduct(){\n            try{\n                // Pageable 객체에 맞게 파라미터 형식으로 데이터를 전송해줘야 함\n                // url에 product/list?size=3&page=0 이런식으로 요청\n                // 방법1. 파라미터 방식 : {params:{page:10, size:2}} 와 같은 형식으로 전송 시 parameter 형식으로 변환되어 서버로 전송\n                // 방법2. body로 formData 객체 생성하여 서버로 데이터 전송 \n                const params = {\n                    size: this.pageSize,\n                    page: this.currentPage\n                }\n                \n\n                const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/product/list`,{params});\n                this.productList = response.data.result.content;\n                console.log(response.data);\n            }catch(e){\n                console.log(e);\n            }\n        },\n        scrollPagination(){\n            // 화면상에서 스크롤이 동작할때 실행되도록 하는 함수\n            // \"현재화면 + 스크롤로 이동한 화면 >  전체화면 - n\" 의 조건이 성립되면 추가 데이터 로드 \n            const isBottom = window.innerHeight + wisdo\n        }\n    }\n}\n</script>\n"],"mappings":"AAqFA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAc;EACVC,KAAK,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EAC/BC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,UAAU,EAAE,UAAU;MACtBC,aAAa,EAAE,CACX;QAACC,IAAI,EAAC,IAAI;QAAEC,KAAK,EAAC;MAAU,CAAC,EAC7B;QAACD,IAAI,EAAC,KAAK;QAAEC,KAAK,EAAE;MAAM,CAAC,EAC3B;QAACD,IAAI,EAAC,MAAM;QAAEC,KAAK,EAAE;MAAU,EAClC;MACDC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAC,EAAE;MACdC,QAAQ,EAAC,CAAC;MACVC,WAAW,EAAC;IAChB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAI,CAACC,WAAW,CAAC,CAAC;IAClBC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAAC,EAAE;EAE9D,CAAC;EACDC,OAAO,EAAC;IACJC,cAAcA,CAAA,EAAE,CAEhB,CAAC;IACDC,aAAaA,CAACC,SAAS,EAAC;MACpBC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IAC1B,CAAC;IACD,MAAMP,WAAWA,CAAA,EAAE;MACf,IAAG;QACC;QACA;QACA;QACA;QACA,MAAMU,MAAK,GAAI;UACXC,IAAI,EAAE,IAAI,CAACd,QAAQ;UACnBe,IAAI,EAAE,IAAI,CAACd;QACf;QAGA,MAAMe,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,eAAe,EAAC;UAACP;QAAM,CAAC,CAAC;QAC7F,IAAI,CAACd,WAAU,GAAIiB,QAAQ,CAACvB,IAAI,CAAC4B,MAAM,CAACC,OAAO;QAC/CX,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACvB,IAAI,CAAC;MAC9B,CAAC,QAAM8B,CAAC,EAAC;QACLZ,OAAO,CAACC,GAAG,CAACW,CAAC,CAAC;MAClB;IACJ,CAAC;IACDjB,gBAAgBA,CAAA,EAAE;MACd;MACA;MACA,MAAMkB,QAAO,GAAIpB,MAAM,CAACqB,WAAU,GAAIC,KAAI;IAC9C;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}