{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"store test component2\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"p\", null, \"count : \" + _toDisplayString(_ctx.getCount), 1 /* TEXT */), _createVNode(_component_v_btn, {\n    color: \"red\",\n    onClick: $options.incrementCount\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"increment Count\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createVNode(_component_v_btn, {\n    color: \"red\",\n    onClick: $options.updateMessage\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"update message\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_toDisplayString","_ctx","getCount","_createVNode","_component_v_btn","color","onClick","$options","incrementCount","default","_withCtx","_createTextVNode","_","type","_cache","$event","$data","message","updateMessage"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/StoreTestComponent2.vue"],"sourcesContent":["<template>\n    <h1>store test component2</h1>\n    <p>count : {{getCount}} </p>\n    <v-btn color=\"red\" @click=\"incrementCount\">increment Count</v-btn>\n\n    <input type=\"text\" v-model=\"message\">\n    <v-btn color=\"red\" @click=\"updateMessage\">update message</v-btn>\n</template>\n\n<script>\nimport {mapGetters} from 'vuex';\nexport default{\n    data(){\n        return{\n            count: 0,\n            message:\"\"\n        }\n    },\n    computed:{\n        // 참조하고있는 변수값이 변했을 때\n        ...mapGetters(['getCount'])\n    },\n    methods:{\n        incrementCount(){\n            // this.count++;\n            this.$store.dispatch('incrementCount')\n        },\n        updateMessage(){\n            this.$store.dispatch\n        }\n    }\n}\n\n</script>\n"],"mappings":";gCACIA,mBAAA,CAA8B,YAA1B,uBAAqB;;;uBAD7BC,mBAAA,CAAAC,SAAA,SACIC,UAA8B,EAC9BH,mBAAA,CAA4B,WAAzB,UAAQ,GAAAI,gBAAA,CAAEC,IAAA,CAAAC,QAAQ,kBACrBC,YAAA,CAAkEC,gBAAA;IAA3DC,KAAK,EAAC,KAAK;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAH/BC,OAAA,EAAAC,QAAA,CAG+C,MAAe,CAH9DC,gBAAA,CAG+C,iBAAe,E;IAH9DC,CAAA;kDAKIhB,mBAAA,CAAqC;IAA9BiB,IAAI,EAAC,MAAM;IALtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKgCC,KAAA,CAAAC,OAAO,GAAAF,MAAA;iDAAPC,KAAA,CAAAC,OAAO,E,GACnCd,YAAA,CAAgEC,gBAAA;IAAzDC,KAAK,EAAC,KAAK;IAAEC,OAAK,EAAEC,QAAA,CAAAW;;IAN/BT,OAAA,EAAAC,QAAA,CAM8C,MAAc,CAN5DC,gBAAA,CAM8C,gBAAc,E;IAN5DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}