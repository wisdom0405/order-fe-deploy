{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"watch 예제\", -1);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"update 예제\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, \"count: \" + _toDisplayString($data.count), 1), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.incrementCount && $options.incrementCount(...args))\n  }, \"increment count\"), _hoisted_2, _createElementVNode(\"div\", null, \"message : \" + _toDisplayString($data.message), 1), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updateMessage && $options.updateMessage(...args))\n  }, \"update message\")], 64);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_toDisplayString","$data","count","onClick","_cache","args","$options","incrementCount","_hoisted_2","message","updateMessage"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/WatchUpdateComponent.vue"],"sourcesContent":["<template>\n    <div>watch 예제</div>\n    <div>count: {{count}} </div>\n    <button @click=\"incrementCount\">increment count</button>\n    <h1>update 예제</h1>\n    <div>message : {{message}}</div>\n    <button @click=\"updateMessage\">update message</button>\n</template>\n<script>\nexport default{\n    data(){\n        return{\n           count: 0,\n           message: \"hello java\"\n        }\n    },\n    watch:{\n        // 특정 변수 값의 변경사항을 인지하는 hook함수\n        count(){\n            // 인지하고자 하는 변수값과 일치되는 함수명 (특정한 변수값 추적)\n            alert(\"count값 변경\")\n        }\n    },\n    updated(){\n        // dom객체(화면)의 변경사항을 인지하는 hook 함수 (watch보다 더 포괄적 개념)\n        alert(\"dom 요소 변경\")\n    },  \n    methods:{\n        incrementCount(){\n            this.count ++;\n        },\n        updateMessage(){\n            this.message = \"hello python\";\n        }\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAAmB,aAAd,UAAQ;gCAGbA,mBAAA,CAAkB,YAAd,WAAS;;uBAJjBC,mBAAA,CAAAC,SAAA,SACIC,UAAmB,EACnBH,mBAAA,CAA4B,aAAvB,SAAO,GAAAI,gBAAA,CAAEC,KAAA,CAAAC,KAAK,OACnBN,mBAAA,CAAwD;IAA/CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,iBAAe,GAC/CG,UAAkB,EAClBZ,mBAAA,CAAgC,aAA3B,YAAU,GAAAI,gBAAA,CAAEC,KAAA,CAAAQ,OAAO,OACxBb,mBAAA,CAAsD;IAA7CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,aAAA,IAAAJ,QAAA,CAAAI,aAAA,IAAAL,IAAA,CAAa;KAAE,gBAAc,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}