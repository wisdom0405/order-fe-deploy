{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" HTML 요소의 동적 값 표시 \"), _createCommentVNode(\" html요소 안에 중괄호 2번을 사용함으로서 script에 정의된 변수값을 화면에 표시 \"), _createElementVNode(\"h1\", null, \"hello world \" + _toDisplayString($data.language), 1 /* TEXT */), _createCommentVNode(\" :value문법을 사용하면 단방향 데이터 바인딩 \"), _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $data.value1\n  }, null, 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" v-model문법을 사용하면 양방향 데이터 바인딩 \"), _createCommentVNode(\" 양방향 데이터 바인딩은 여기서 자바스크립트 변수값도 바꿔줄 수 있다. \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.value2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.value2]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.showValue && $options.showValue(...args))\n  }, \"변수 변경사항 확인\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_toDisplayString","$data","language","type","value","value1","_hoisted_1","_cache","$event","value2","onClick","args","$options","showValue"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/practice/ModelingComponent.vue"],"sourcesContent":["<template>\n    <!-- HTML 요소의 동적 값 표시 -->\n     <!-- html요소 안에 중괄호 2번을 사용함으로서 script에 정의된 변수값을 화면에 표시 -->\n      <h1>hello world {{language}}</h1>\n\n        <!-- :value문법을 사용하면 단방향 데이터 바인딩 -->\n        <input type=\"text\" :value=\"value1\">\n        <!-- v-model문법을 사용하면 양방향 데이터 바인딩 -->\n         <!-- 양방향 데이터 바인딩은 여기서 자바스크립트 변수값도 바꿔줄 수 있다. -->\n        <input type=\"text\" v-model=\"value2\">\n\n        <button @click=\"showValue\">변수 변경사항 확인</button>\n</template>\n\n<script>\nexport default{\n    data() {\n        return{\n            language:\"python\",\n            value1:\" python\",\n            value2:\" java\"\n        }\n    },\n    methods:{\n        showValue(){\n            alert(this.value2) \n        }\n    }\n}\n</script>\n"],"mappings":";mBAAA;;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,sBAAyB,EACxBA,mBAAA,sDAAyD,EACxDC,mBAAA,CAAiC,YAA7B,cAAY,GAAAC,gBAAA,CAAEC,KAAA,CAAAC,QAAQ,kBAExBJ,mBAAA,gCAAmC,EACnCC,mBAAA,CAAmC;IAA5BI,IAAI,EAAC,MAAM;IAAEC,KAAK,EAAEH,KAAA,CAAAI;0BANnCC,UAAA,GAOQR,mBAAA,iCAAoC,EACnCA,mBAAA,4CAA+C,E,gBAChDC,mBAAA,CAAoC;IAA7BI,IAAI,EAAC,MAAM;IAT1B,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASoCP,KAAA,CAAAQ,MAAM,GAAAD,MAAA;iDAANP,KAAA,CAAAQ,MAAM,E,GAElCV,mBAAA,CAA8C;IAArCW,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}