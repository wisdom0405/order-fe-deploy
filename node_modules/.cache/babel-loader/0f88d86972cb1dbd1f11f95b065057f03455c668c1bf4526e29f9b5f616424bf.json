{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction initState() {\n  return {\n    productsInCart: localStorage.getItem('productsInCart') || [],\n    // 없으면 빈배열 꺼내옴\n    totalQuantity: localStorage.getItem('totalQuantity') || 0 // 없으면 0으로 세팅\n  };\n}\nconst practice = {\n  state: initState,\n  mutations: {\n    addCart(state, product) {\n      const existProduct = state.productsInCart.find(p => p.id == product.id);\n      if (existProduct) {\n        existProduct.quantity += product.quantity;\n      } else {\n        state.productsInCart.push(product);\n      }\n      state.totalQuantity += product.quantity;\n    }\n  },\n  actions: {\n    addCart(context, product) {\n      context.commit('addCart', product);\n    }\n  },\n  getters: {\n    getTotalQuantity: state => state.totalQuantity,\n    getProductsInCart: state => state.productsInCart\n  }\n};\nexport default practice;","map":{"version":3,"names":["initState","productsInCart","localStorage","getItem","totalQuantity","practice","state","mutations","addCart","product","existProduct","find","p","id","quantity","push","actions","context","commit","getters","getTotalQuantity","getProductsInCart"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/store/cart.js"],"sourcesContent":["function initState() {\n    return {\n        productsInCart: localStorage.getItem('productsInCart') || [], // 없으면 빈배열 꺼내옴\n        totalQuantity: localStorage.getItem('totalQuantity') || 0 // 없으면 0으로 세팅\n    }\n}\n\nconst practice = {\n    state: initState,\n    mutations: {\n        addCart(state, product) {\n            const existProduct = state.productsInCart.find(p => p.id == product.id);\n            if(existProduct){\n                existProduct.quantity +=product.quantity;\n            }else{\n                state.productsInCart.push(product);\n            }\n            state.totalQuantity += product.quantity;\n            \n        }\n    },\n    actions: {\n        addCart(context, product){\n            context.commit('addCart', product);\n        }\n    },\n    getters: {\n        getTotalQuantity: state => state.totalQuantity,\n        getProductsInCart: state => state.productsInCart\n    },\n}\n\nexport default practice"],"mappings":";AAAA,SAASA,SAASA,CAAA,EAAG;EACjB,OAAO;IACHC,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE;IAAE;IAC9DC,aAAa,EAAEF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;EAC9D,CAAC;AACL;AAEA,MAAME,QAAQ,GAAG;EACbC,KAAK,EAAEN,SAAS;EAChBO,SAAS,EAAE;IACPC,OAAOA,CAACF,KAAK,EAAEG,OAAO,EAAE;MACpB,MAAMC,YAAY,GAAGJ,KAAK,CAACL,cAAc,CAACU,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIJ,OAAO,CAACI,EAAE,CAAC;MACvE,IAAGH,YAAY,EAAC;QACZA,YAAY,CAACI,QAAQ,IAAGL,OAAO,CAACK,QAAQ;MAC5C,CAAC,MAAI;QACDR,KAAK,CAACL,cAAc,CAACc,IAAI,CAACN,OAAO,CAAC;MACtC;MACAH,KAAK,CAACF,aAAa,IAAIK,OAAO,CAACK,QAAQ;IAE3C;EACJ,CAAC;EACDE,OAAO,EAAE;IACLR,OAAOA,CAACS,OAAO,EAAER,OAAO,EAAC;MACrBQ,OAAO,CAACC,MAAM,CAAC,SAAS,EAAET,OAAO,CAAC;IACtC;EACJ,CAAC;EACDU,OAAO,EAAE;IACLC,gBAAgB,EAAEd,KAAK,IAAIA,KAAK,CAACF,aAAa;IAC9CiB,iBAAiB,EAAEf,KAAK,IAAIA,KAAK,CAACL;EACtC;AACJ,CAAC;AAED,eAAeI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}