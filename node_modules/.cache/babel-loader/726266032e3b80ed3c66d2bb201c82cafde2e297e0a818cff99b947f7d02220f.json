{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      city: \"\",\n      street: \"\",\n      zipcode: \"\"\n    };\n  },\n  methods: {\n    async memberCreate() {\n      try {\n        const registerData = {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          address: {\n            city: this.city,\n            street: this.street,\n            zipcode: this.zipcode\n          }\n        };\n        // axios는 비동기함수이므로 async-await 해주지 않으면 .push먼저 동작함\n        await axios.post('http://localhost:8080/member/create', registerData);\n        this.$router.push(\"/\");\n      } catch (e) {\n        // 이메일중복, 비밀번호 길이 예외\n        console.log(e.response.data.error_message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","password","city","street","zipcode","methods","memberCreate","registerData","address","post","$router","push","e","console","log","response","error_message"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/views/MemberCreate.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <!-- 화면크기가 small 이상일 때: sm (스마트폰, 태블릿 크기)-->\n            <!-- 화면크기가 medium 이상일 때: md (데스크탑 크기)-->\n            <v-col cols=\"12\" sm=\"4\" md=\"6\">\n                <v-card>\n                    <v-card-title class=\"text-h5 text-center\">\n                        회원가입\n                    </v-card-title>\n                    <v-card-text>\n                        <v-form @submit.prevent=\"memberCreate\">\n                            <v-text-field\n                                label=\"이름\"\n                                v-model=\"name\"\n                                prepend-icon=\"mdi-account\"\n                                required\n                            >\n\n                            </v-text-field>\n                            <v-text-field\n                                label=\"email\"\n                                v-model=\"email\"\n                                type=\"email\"\n                                prepend-icon=\"mdi-email\"\n                                required\n                            >\n                                \n                            </v-text-field>\n                            <v-text-field\n                                label=\"password\"\n                                v-model=\"password\"\n                                type=\"password\"\n                                prepend-icon=\"mdi-lock\"\n                                required\n                            >\n                                \n                            </v-text-field>\n                            <v-text-field\n                                label=\"도시\"\n                                v-model=\"city\"\n                                prepend-icon=\"mdi-city\"\n                            >\n                                \n                            </v-text-field>\n                            <v-text-field\n                                label=\"상세주소\"\n                                v-model=\"street\"\n                                prepend-icon=\"mdi-home\"\n                            >\n                                \n                            </v-text-field>\n                            <v-text-field\n                                label=\"우편번호\"\n                                v-model=\"zipcode\"\n                                prepend-icon=\"mdi-mailbox\"\n                            >\n                            </v-text-field>\n                            <!-- block은 부모컨테이너 너비만큼을 꽉 채우는 것 -->\n                            <v-btn type=\"submit\" color=\"primary\" block>등록</v-btn>\n                        </v-form>\n                    </v-card-text>\n                </v-card>\n            </v-col>\n\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    data(){\n        return{\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            city: \"\",\n            street: \"\",\n            zipcode: \"\"\n        }\n    },\n    methods:{\n        async memberCreate(){\n            try{\n                const registerData = {\n                name: this.name,\n                email: this.email,\n                password: this.password,\n                address:{\n                    city: this.city,\n                street: this.street,\n                zipcode: this.zipcode\n                }\n            }\n            // axios는 비동기함수이므로 async-await 해주지 않으면 .push먼저 동작함\n            await axios.post('http://localhost:8080/member/create', registerData);\n            this.$router.push(\"/\");\n            }catch(e){\n                // 이메일중복, 비밀번호 길이 예외\n                console.log(e.response.data.error_message);\n            }\n        }\n    }\n}\n</script>\n"],"mappings":";AAsEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,YAAYA,CAAA,EAAE;MAChB,IAAG;QACC,MAAMC,YAAW,GAAI;UACrBR,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBO,OAAO,EAAC;YACJN,IAAI,EAAE,IAAI,CAACA,IAAI;YACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;YACnBC,OAAO,EAAE,IAAI,CAACA;UACd;QACJ;QACA;QACA,MAAMP,KAAK,CAACY,IAAI,CAAC,qCAAqC,EAAEF,YAAY,CAAC;QACrE,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACtB,CAAC,QAAMC,CAAC,EAAC;QACL;QACAC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,QAAQ,CAACjB,IAAI,CAACkB,aAAa,CAAC;MAC9C;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}