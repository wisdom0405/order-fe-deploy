{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction initState() {\n  return {\n    productsInCart: JSON.parse(localStorage.getItem('productsInCart')) || [],\n    // 없으면 빈배열 꺼내옴\n    totalQuantity: localStorage.getItem('totalQuantity') || 0 // 없으면 0으로 세팅\n  };\n}\nconst practice = {\n  state: initState,\n  mutations: {\n    addCart(state, product) {\n      const existProduct = state.productsInCart.find(p => p.id == product.id);\n      if (existProduct) {\n        existProduct.quantity += product.quantity;\n      } else {\n        state.productsInCart.push(product);\n      }\n      state.totalQuantity = parseInt(state.totalQuantity) + product.quantity; // parseInt안해주면 문자열로 이어져서 들어감\n      // 로컬 스토리지에 데이터 직렬화하여 삽입\n      localStorage.setItem('productsInCart', JSON.stringify(state.productsInCart));\n      localStorage.setItem('totalQuantity', state.totalQuantity);\n    },\n    clearCart(state) {\n      state.productsInCart = [];\n      state.totalQuantity = 0;\n      localStorage.removeItem();\n    }\n  },\n  actions: {\n    addCart(context, product) {\n      context.commit('addCart', product);\n    },\n    clearCart(context) {\n      context.commit('clearCart');\n    }\n  },\n  getters: {\n    getTotalQuantity: state => state.totalQuantity,\n    getProductsInCart: state => state.productsInCart\n  }\n};\nexport default practice;","map":{"version":3,"names":["initState","productsInCart","JSON","parse","localStorage","getItem","totalQuantity","practice","state","mutations","addCart","product","existProduct","find","p","id","quantity","push","parseInt","setItem","stringify","clearCart","removeItem","actions","context","commit","getters","getTotalQuantity","getProductsInCart"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/store/cart.js"],"sourcesContent":["function initState() {\n    return {\n        productsInCart: JSON.parse(localStorage.getItem('productsInCart')) || [], // 없으면 빈배열 꺼내옴\n        totalQuantity: localStorage.getItem('totalQuantity') || 0 // 없으면 0으로 세팅\n    }\n}\n\nconst practice = {\n    state: initState,\n    mutations: {\n        addCart(state, product) {\n            const existProduct = state.productsInCart.find(p => p.id == product.id);\n            if(existProduct){\n                existProduct.quantity +=product.quantity;\n            }else{\n                state.productsInCart.push(product);\n                \n            }\n            state.totalQuantity = parseInt(state.totalQuantity) + product.quantity; // parseInt안해주면 문자열로 이어져서 들어감\n            // 로컬 스토리지에 데이터 직렬화하여 삽입\n            localStorage.setItem('productsInCart', JSON.stringify(state.productsInCart));\n            localStorage.setItem('totalQuantity', state.totalQuantity);\n        },\n        clearCart(state){\n            state.productsInCart = [];\n            state.totalQuantity = 0;\n            localStorage.removeItem()\n        }\n    },\n    actions: {\n        addCart(context, product){\n            context.commit('addCart', product);\n        },\n        clearCart(context){\n            context.commit('clearCart');\n        }\n    },\n    getters: {\n        getTotalQuantity: state => state.totalQuantity,\n        getProductsInCart: state => state.productsInCart\n    },\n}\n\nexport default practice"],"mappings":";AAAA,SAASA,SAASA,CAAA,EAAG;EACjB,OAAO;IACHC,cAAc,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE;IAAE;IAC1EC,aAAa,EAAEF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;EAC9D,CAAC;AACL;AAEA,MAAME,QAAQ,GAAG;EACbC,KAAK,EAAER,SAAS;EAChBS,SAAS,EAAE;IACPC,OAAOA,CAACF,KAAK,EAAEG,OAAO,EAAE;MACpB,MAAMC,YAAY,GAAGJ,KAAK,CAACP,cAAc,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIJ,OAAO,CAACI,EAAE,CAAC;MACvE,IAAGH,YAAY,EAAC;QACZA,YAAY,CAACI,QAAQ,IAAGL,OAAO,CAACK,QAAQ;MAC5C,CAAC,MAAI;QACDR,KAAK,CAACP,cAAc,CAACgB,IAAI,CAACN,OAAO,CAAC;MAEtC;MACAH,KAAK,CAACF,aAAa,GAAGY,QAAQ,CAACV,KAAK,CAACF,aAAa,CAAC,GAAGK,OAAO,CAACK,QAAQ,CAAC,CAAC;MACxE;MACAZ,YAAY,CAACe,OAAO,CAAC,gBAAgB,EAAEjB,IAAI,CAACkB,SAAS,CAACZ,KAAK,CAACP,cAAc,CAAC,CAAC;MAC5EG,YAAY,CAACe,OAAO,CAAC,eAAe,EAAEX,KAAK,CAACF,aAAa,CAAC;IAC9D,CAAC;IACDe,SAASA,CAACb,KAAK,EAAC;MACZA,KAAK,CAACP,cAAc,GAAG,EAAE;MACzBO,KAAK,CAACF,aAAa,GAAG,CAAC;MACvBF,YAAY,CAACkB,UAAU,CAAC,CAAC;IAC7B;EACJ,CAAC;EACDC,OAAO,EAAE;IACLb,OAAOA,CAACc,OAAO,EAAEb,OAAO,EAAC;MACrBa,OAAO,CAACC,MAAM,CAAC,SAAS,EAAEd,OAAO,CAAC;IACtC,CAAC;IACDU,SAASA,CAACG,OAAO,EAAC;MACdA,OAAO,CAACC,MAAM,CAAC,WAAW,CAAC;IAC/B;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,gBAAgB,EAAEnB,KAAK,IAAIA,KAAK,CAACF,aAAa;IAC9CsB,iBAAiB,EAAEpB,KAAK,IAAIA,KAAK,CAACP;EACtC;AACJ,CAAC;AAED,eAAeM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}