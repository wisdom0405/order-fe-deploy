{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['isAdmin'],\n  data() {\n    return {\n      orderList: [],\n      tableHeaders: [{\n        title: 'ID',\n        key: 'id',\n        align: 'start'\n      }, {\n        title: '회원 EMAIL',\n        key: 'memberEmail',\n        align: 'start'\n      }, {\n        title: '주문상태',\n        key: 'orderStatus',\n        align: 'start'\n      }, {\n        title: 'ACTION',\n        key: 'actions',\n        align: 'start'\n      }]\n    };\n  },\n  async created() {\n    if (this.isAdmin) {\n      // script\n      // admin이면 모든 주문목록 조회\n      const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/order/list`);\n      this.orderList = response.data.result;\n    } else {\n      // 일반user면 내주문목록만 조회\n      const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/order/myorders`);\n      this.orderList = response.data.result;\n    }\n  },\n  methods: {\n    async cancelOrder(id) {\n      try {\n        await axios.patch(`${process.env.VUE_APP_API_BASE_URL}/order/${id}/cancel`);\n        window.location.reload();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","orderList","tableHeaders","title","key","align","created","isAdmin","response","get","process","env","VUE_APP_API_BASE_URL","result","methods","cancelOrder","id","patch","window","location","reload","e","console","log"],"sources":["/Users/wisdom/Documents/GitHub/order-frontend/src/components/OrderListComponent.vue"],"sourcesContent":["<template>\n    <v-container>\n        <v-row justify=\"center\">\n            <v-col>\n                <v-card-title class=\"text-center text-h5\">\n                    주문목록\n                </v-card-title>\n                \n                <v-card-text>\n                    <v-data-table\n                    :headers=\"tableHeaders\"\n                    :items=\"orderList\"\n                    class=\"elevation-1\"\n                    show-expand\n                    >\n                    <template v-slot:[`item.actions`]=\"{item}\">\n                        <v-btn color=\"red\" v-if=\"isAdmin && item.orderStatus === 'ORDERED'\" @click.stop=\"cancelOrder(item.id)\" size=small>\n                            CANCEL\n                        </v-btn>\n                    </template>\n\n                    <template v-slot:expanded-row=\"{item}\">\n                        <v-row>\n                            <v-col>\n                                <v-list-item v-for=\"orderItem in item.orderDetailDtos\" :key=\"orderItem.id\">\n                                    <v-list-item-content>\n                                        <v-list-item-title>\n                                            {{ orderItem.productName }} {{ orderItem.count }} 개\n                                        </v-list-item-title>\n                                    </v-list-item-content>\n                                </v-list-item>\n                            </v-col>\n                        </v-row>\n                    </template>\n\n                    </v-data-table>\n                </v-card-text>\n\n            </v-col>\n        </v-row>\n    </v-container>\n</template>\n<script>\nimport axios from 'axios';\nexport default{\n    props: ['isAdmin'],\n    data(){\n        return{\n            orderList:[],\n            tableHeaders: [\n                        {title: 'ID', key : 'id', align: 'start'}, \n                        {title:'회원 EMAIL', key:'memberEmail', align:'start'},\n                        {title:'주문상태', key:'orderStatus', align:'start'},\n                        {title:'ACTION', key:'actions', align:'start'}\n                        ]\n        }\n    },\n    async created(){\n        if(this.isAdmin){ // script\n            // admin이면 모든 주문목록 조회\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/order/list`); \n            this.orderList = response.data.result;\n        }else{\n            // 일반user면 내주문목록만 조회\n            const response = await axios.get(`${process.env.VUE_APP_API_BASE_URL}/order/myorders`); \n            this.orderList = response.data.result;\n        }\n        \n    },\n    methods:{\n        async cancelOrder(id){\n            try{\n                await axios.patch(`${process.env.VUE_APP_API_BASE_URL}/order/${id}/cancel`); \n                window.location.reload();\n            }catch(e){\n                console.log(e);\n            }\n\n        }\n    }\n}\n</script>\n"],"mappings":"AA2CA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAc;EACVC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,SAAS,EAAC,EAAE;MACZC,YAAY,EAAE,CACF;QAACC,KAAK,EAAE,IAAI;QAAEC,GAAE,EAAI,IAAI;QAAEC,KAAK,EAAE;MAAO,CAAC,EACzC;QAACF,KAAK,EAAC,UAAU;QAAEC,GAAG,EAAC,aAAa;QAAEC,KAAK,EAAC;MAAO,CAAC,EACpD;QAACF,KAAK,EAAC,MAAM;QAAEC,GAAG,EAAC,aAAa;QAAEC,KAAK,EAAC;MAAO,CAAC,EAChD;QAACF,KAAK,EAAC,QAAQ;QAAEC,GAAG,EAAC,SAAS;QAAEC,KAAK,EAAC;MAAO;IAE7D;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAE;IACX,IAAG,IAAI,CAACC,OAAO,EAAC;MAAE;MACd;MACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,aAAa,CAAC;MAClF,IAAI,CAACX,SAAQ,GAAIO,QAAQ,CAACR,IAAI,CAACa,MAAM;IACzC,CAAC,MAAI;MACD;MACA,MAAML,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,iBAAiB,CAAC;MACtF,IAAI,CAACX,SAAQ,GAAIO,QAAQ,CAACR,IAAI,CAACa,MAAM;IACzC;EAEJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,WAAWA,CAACC,EAAE,EAAC;MACjB,IAAG;QACC,MAAMlB,KAAK,CAACmB,KAAK,CAAC,GAAGP,OAAO,CAACC,GAAG,CAACC,oBAAoB,UAAUI,EAAE,SAAS,CAAC;QAC3EE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,QAAMC,CAAC,EAAC;QACLC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB;IAEJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}